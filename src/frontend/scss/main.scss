// Mixin to prefix a property
//// @author Hugo Giraudel
//// @param {String} $property 			- Property name
//// @param {*} $value 					    - Property value
//// @param {List} $prefixes (())   - List of prefixes to print

@mixin prefix($property, $value) {
  $prefixes: webkit moz ms o;

  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: #{$value};
  }
  // Output standard non-prefixed declaration
  #{$property}: #{$value};
}

// Mixin to prefix animation
//// @param {String} $animation-name - Name of the animation
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }

  @-moz-keyframes #{$animation-name} {
    @content;
  }

  @-ms-keyframes #{$animation-name} {
    @content;
  }

  @-o-keyframes #{$animation-name} {
    @content;
  }

  @keyframes #{$animation-name} {
    @content;
  }
}

@font-face {
  font-family: orbitron;
  src: url("./../resources/fonts/Orbitron-VariableFont_wght.ttf");
}

html,
body {
  margin: 0;
  padding: 0;
  height: 100%;
  font-family: orbitron, "arial";
  background-color: #457b9d;
}
a {
  color: white;
  &:hover,
  &:visited {
    text-decoration: none;
    color: white;
  }
}

#app {
  border: 0px red solid;
  height: 100%;
}

#pomodoro-clock {
  border: 5px black solid;
  background-color: #83c5be;
  max-width: 600px;
  padding: 1em;
  border-radius: 1em;

  #title {
    color: black;
    font-weight: bold;
  }

  .controls-title {
  }
  #session-decrement,
  #session-increment,
  #break-decrement,
  #break-increment {
    border-radius: 1em;
    border: 4px #001233 solid;
    i {
      padding: 0em 0.25em;
    }
    &:focus {
      outline: none;
    }
    &:hover {
      background-color: #457b9d;
      outline: none;
      i {
        color: white;
      }
    }
  }

  #break-label,
  #session-label {
    color: #001233;
    font-weight: bold;
  }

  #break-length,
  #session-length {
    margin: 0em 0.25em;
    color: black;
    font-weight: bold;
    min-width: 2.5em;
  }

  #timer-container {
    border: 5px black solid;
    background-color: white;
    padding: 1em 5em;
    border-radius: 1em;
    #timer-label {
      color: black;
      font-weight: bold;
    }
  }

  #time-left {
    color: black;
    min-width: 200px;
  }

  .time-left-active {
    @include prefix("animation-iteration-count", "infinite");
    @include prefix("animation-name", "time-left-active");
    @include prefix("animation-timing-function", "linear");
    @include prefix("animation-duration", "1s");
  }

  .time-left-inactive {
    color: red !important;
  }

  #play-reset-controls {
    #start_stop,
    #reset {
      border: none;
      margin: 0em 0.5em;
      background: none;
      &:focus,
      &:hover {
        outline: none;
      }

      &:hover {
        color: darken(#457b9d, 20%);
      }
    }
  }

  #break-container {
    * {
      padding: 0em 0.25em;
    }
  }
}

@include keyframes("time-left-active") {
  0% {
    color: red;
  }

  25% {
    color: red;
  }
  26% {
    color: black;
  }
  50% {
    color: black;
  }
  75% {
    color: black;
  }
  76% {
    color: red;
  }

  100% {
    color: red;
  }
}
